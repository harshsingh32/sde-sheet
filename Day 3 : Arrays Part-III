//Search in a sorted 2D matrix

class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
         int rowPointer = 0;
        int colPointer = matrix[0].length-1;
        while(rowPointer < matrix.length && colPointer >= 0){
            if(matrix[rowPointer][colPointer] == target) return true;
            else if(matrix[rowPointer][colPointer] > target) colPointer--;
            else rowPointer++;
        }
        return false;
    }
    }


//Pow(x,n)

class Solution {
    public double myPow(double x, int n) {
        double ans=1.0;
        long nn=n;
        if(nn<0) nn=-1*nn;
        while(nn>0){
            if(nn%2==1){
                ans = ans *x;
                nn=nn-1;
            }
            else{
                x=x*x;
                nn=nn/2;
            }
        }
        if(n<0)
        ans = (double)(1.0)/(double)(ans);
        return ans;
    }
}

//Majority Element (>n/2 times)
